unit MLossCut;

interface

uses
  Windows, Classes, Forms, Controls, StdCtrls, ExtCtrls, SysUtils,
  DB, DBAccess, MemDS, Mask, Dialogs, ImgList,
//  Messages, Variants, Graphics,
//BusinessSkinForm_1042
  BusinessSkinForm, bsSkinCtrls, bsRibbon, bsMessages,
// Raize, kcRaize
  RzPanel, RzEdit, RzDBEdit, RzCmboBx, RzDBCmbo, RzSplit, RzLstBox, kcRaizeCtrl,
  RzDBNav, VCL_Helper,
// EhLib
  DBGridEhGrouping, ToolCtrlsEh, DBGridEhToolCtrls, DynVarsEh, GridsEh,
  DBAxisGridsEh, DBGridEh,
// UniDAC
  Uni,
// User Unit
  MBasic;

type
  TfmLossCut = class(TfmBasic)
    gdMain: TDBGridEh;
    pnCnt: TRzPanel;
    dbMainACNT_NO: TStringField;
    dbMainTRADE_DT: TStringField;
    dbMainTM: TStringField;
    dbMainACNT_TP: TStringField;
    dbMainUSER_ID: TStringField;
    dbMainACNT_AMT: TFloatField;
    dbMainCLR_PL: TFloatField;
    dbMainCMSN: TFloatField;
    dbMainESTM_PL: TFloatField;
    dbMainESTM_AMT: TFloatField;
    dbMainSYS_DT: TStringField;
    dbMainUSER_NM: TStringField;
    dbMainTOTCNT: TIntegerField;
    bsSkinLabel45: TbsSkinLabel;
    dtDt: TkcRzDateTimeEdit;
    chUserTp: TbsSkinCheckRadioBox;
    procedure FormShow(Sender: TObject);
    procedure btnExcelClick(Sender: TObject);
    procedure dtDtChange(Sender: TObject);
    procedure gdMainTitleBtnClick(Sender: TObject; ACol: Integer;
      Column: TColumnEh);
    procedure chUserTpClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure MainTableOpen; override;
  end;

var
  fmLossCut: TfmLossCut;

implementation

uses StdUtils, MMastDB, MDelay;

{$R *.dfm}

procedure TfmLossCut.btnExcelClick(Sender: TObject);
begin
  inherited;
  Export_Excel(gdMain);
end;

procedure TfmLossCut.chUserTpClick(Sender: TObject);
begin
  inherited;
  btnFilter.ButtonClick;
end;

procedure TfmLossCut.dtDtChange(Sender: TObject);
begin
  inherited;
  MainTableOpen;
end;

procedure TfmLossCut.FormShow(Sender: TObject);
begin
  inherited;

  dtDt.Date := TextToDate(__Trade_DT);

end;

procedure TfmLossCut.gdMainTitleBtnClick(Sender: TObject; ACol: Integer;
  Column: TColumnEh);
begin
  inherited;
  with dbMain do
  begin
    if IndexFieldNames = Column.FieldName then IndexFieldNames := Column.FieldName + ' Desc'
    else IndexFieldNames := Column.FieldName
  end;
end;

procedure TfmLossCut.MainTableOpen;
var
  sSql, sUserTp : String;
begin
  try
    Delay_Show();

    if chUserTp.Checked then sUserTp := ' AND B.USER_GRADE = 2 '
    else sUserTp := '';

    sSql := Format( 'SELECT A.ACNT_NO            '+
                    ',A.TRADE_DT                 '+
                    ',A.TM                       '+
                    ',A.ACNT_TP                  '+
                    ',A.USER_ID                  '+
                    ',A.ACNT_AMT                 '+
                    ',A.CLR_PL                   '+
                    ',A.CMSN                     '+
                    ',A.ESTM_PL                  '+
                    ',A.ESTM_AMT                 '+
                    ',A.SYS_DT                   '+
                    ',B.USER_NM                  '+
                    ',COUNT(1) OVER() AS TOTCNT  '+
                    'FROM LOSSCUT_HIS A          '+
                    '    ,USER_MST B             '+
                    'WHERE A.USER_ID = B.USER_ID '+
                    'AND A.TRADE_DT = %s %s      ',
                    [QuotedStr(StrReplace(dtDt.Text, '-', '')), sUserTp]);

    Uni_Open(dbMain, sSql);
    PartTableOpen(TComponent(gdMain.Columns[3]), Format('@|CODE_VALUE_NM, CODE_VALUE|CODE_MST|WHERE CODE_ID = %s', [QuotedStr('ACNT_TP')]));

    if dbMain.RecordCount > 0 then pnCnt.Caption := dbMain.FieldByName('TOTCNT').AsString + ' °Ç'
    else pnCnt.Caption := '0 °Ç';

  finally
    Delay_Hide;
  end;
end;

end.
